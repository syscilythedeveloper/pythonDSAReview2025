
"""Fixed Window Size Problems (1-5)
1. Maximum Sum of K Consecutive Elements
Difficulty: Easy
Problem: Given an array of integers and a number K, find the maximum sum of K consecutive elements.
Example:

Input: [2, 1, 5, 1, 3, 2], K = 3
Output: 9 (subarray [5, 1, 3])

Your Task: Implement using sliding window technique."""

def max_consec_sum(arr, k): 
 
    current_sum = sum(arr[:k])
    max_sum = current_sum

    for i in range(k, len(arr)): 
        current_sum = current_sum - arr[i-k] + arr[i]
        max_sum = max(current_sum, max_sum)

    return max_sum

print(max_consec_sum([2, 1, 5, 1, 3, 2], 3))

"""2. Average of All Subarrays of Size K
Difficulty: Easy
Problem: Given an array and K, find the average of all contiguous subarrays of size K.
Example:

Input: [1, 3, 2, 6, -1, 4, 1, 8, 2], K = 5
Output: [2.2, 2.8, 2.4, 3.6, 2.8]

Your Task: Return a list of averages."""

def avg_sub_array(arr, k): 
    #list of average
    window_sum = sum(arr[:k])
    averages = [window_sum/k]
 
    for i in range(k, len(arr)):
        window_sum= window_sum - arr[i-k] + arr[i]
        averages.append(window_sum/k)
    return averages
print(avg_sub_array([1, 3, 2, 6, -1, 4, 1, 8, 2], 5))


"""3. Maximum Number of Vowels in Substring of Length K
Difficulty: Medium
Problem: Given a string and integer K, return the maximum number of vowel letters in any substring of length K.
Example:

Input: "abciiidef", K = 3
Output: 3 (substring "iii")

Your Task: Only count a, e, i, o, u as vowels."""